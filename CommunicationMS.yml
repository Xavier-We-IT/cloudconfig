server:
  port: ${COMMUNICATION_MS_PORT}

spring:
  application:
    name: CommunicationMS
  kafka:
    bootstrap-servers:
      - ${KAFKA_CONSUMER_BOOTSTRAP_SERVERS}
    consumer:
      group-id: matchit
      auto-offset-reset: earliest
      enable-auto-commit: true
      auto-commit-interval: 1000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 500
      concurrency: 3
    listener:
      starting-offsets: earliest
    template:
      default-topic: "com-matchit"

  mail:
    base-url: ${GKE_FRONTEND_EXTERNAL_ADDRESS}
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    protocol: ${MAIL_PROTOCOL}
    tls: true
    properties.mail.smtp:
      auth: true
      starttls.enable: true
      ssl.trust: ${MAIL_HOST}

  messages:
    basename: i18n/messages

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_DEFAULT_ZONE}
    fetch-registry: true
    register-with-eureka: true
  instance:
    lease-renewal-interval-in-seconds: 20
